@model star_events.Models.Event

@{
    ViewData["Title"] = "Edit Event";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="page-header">
    <h1><i class="bi bi-pencil"></i> Edit Event</h1>
    <p>Update event information</p>
</div>

<div class="row">
    <div class="col-lg-10">
        <div class="form-card">
            <div class="card-header">
                <h5><i class="bi bi-calendar-event"></i> Event Information</h5>
            </div>
            <div class="card-body">
                <form asp-action="Edit" class="needs-validation" novalidate enctype="multipart/form-data">
                    <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
                    <input type="hidden" asp-for="EventID" />
                    <input type="hidden" id="deletedImageIndexes" name="deletedImageIndexes" value="" />
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label asp-for="Title" class="form-label">
                                    <i class="bi bi-type"></i> Event Title <span class="text-danger">*</span>
                                </label>
                                <input asp-for="Title" class="form-control" placeholder="Enter event title" required />
                                <span asp-validation-for="Title" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label asp-for="Status" class="form-label">
                                    <i class="bi bi-toggle-on"></i> Status <span class="text-danger">*</span>
                                </label>
                                <select asp-for="Status" class="form-select" required>
                                    <option value="">-- Select Status --</option>
                                    <option value="Draft">Draft</option>
                                    <option value="Active">Active</option>
                                    <option value="Cancelled">Cancelled</option>
                                </select>
                                <span asp-validation-for="Status" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label asp-for="Description" class="form-label">
                                    <i class="bi bi-text-paragraph"></i> Description <span class="text-danger">*</span>
                                </label>
                                <textarea asp-for="Description" class="form-control" rows="4" placeholder="Enter event description" required></textarea>
                                <span asp-validation-for="Description" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label asp-for="LocationID" class="form-label">
                                    <i class="bi bi-geo-alt"></i> Venue <span class="text-danger">*</span>
                                </label>
                                <select asp-for="LocationID" class="form-select" asp-items="ViewBag.LocationID" required>
                                    <option value="">-- Select Venue --</option>
                                </select>
                                <span asp-validation-for="LocationID" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label asp-for="CategoryID" class="form-label">
                                    <i class="bi bi-tags"></i> Category <span class="text-danger">*</span>
                                </label>
                                <select asp-for="CategoryID" class="form-select" asp-items="ViewBag.CategoryID" required>
                                    <option value="">-- Select Category --</option>
                                </select>
                                <span asp-validation-for="CategoryID" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label asp-for="OrganizerID" class="form-label">
                                    <i class="bi bi-person"></i> Organizer <span class="text-danger">*</span>
                                </label>
                                <select asp-for="OrganizerID" class="form-select" asp-items="ViewBag.OrganizerID" required>
                                    <option value="">-- Select Organizer --</option>
                                </select>
                                <span asp-validation-for="OrganizerID" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label asp-for="StartDateTime" class="form-label">
                                    <i class="bi bi-calendar-plus"></i> Start Date & Time <span class="text-danger">*</span>
                                </label>
                                <input asp-for="StartDateTime" class="form-control" type="datetime-local" required />
                                <span asp-validation-for="StartDateTime" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label asp-for="EndDateTime" class="form-label">
                                    <i class="bi bi-calendar-x"></i> End Date & Time <span class="text-danger">*</span>
                                </label>
                                <input asp-for="EndDateTime" class="form-control" type="datetime-local" required />
                                <span asp-validation-for="EndDateTime" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                    
                    <input asp-for="ImagePaths" type="hidden" />

                    <!-- Current Images Display -->
                    @if (Model.AllImagePaths.Any())
                    {
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="form-label">
                                        <i class="bi bi-images"></i> Current Images
                                    </label>
                                    <div class="row" id="currentImagesContainer">
                                        @for (int i = 0; i < Model.AllImagePaths.Count; i++)
                                        {
                                            var imagePath = Model.AllImagePaths[i];
                                            <div class="col-md-3 mb-3" data-image-index="@i">
                                                <div class="card">
                                                    <img src="@imagePath" class="card-img-top" alt="Event Image" style="height: 150px; object-fit: cover;">
                                                    <div class="card-body p-2">
                                                        <small class="text-muted">
                                                            @if (imagePath.StartsWith("http"))
                                                            {
                                                                <i class="bi bi-link-45deg"></i> <span>External URL</span>
                                                            }
                                                            else
                                                            {
                                                                <i class="bi bi-cloud-check"></i> <span>Uploaded File</span>
                                                            }
                                                        </small>
                                                        <button type="button" class="btn btn-sm btn-outline-danger float-end" onclick="deleteCurrentImage(@i, '@imagePath')">
                                                            <i class="bi bi-trash"></i>
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    }

                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label class="form-label">
                                    <i class="bi bi-cloud-upload"></i> Upload New Event Images
                                </label>
                                <input type="file" id="fileInput" name="uploadedImages" class="form-control" multiple accept="image/*" />
                                <div class="form-text">Optional: Upload up to 10 new image files (JPG, PNG, GIF, WebP)</div>
                                <div class="mt-2">
                                    <small class="text-warning">
                                        <i class="bi bi-exclamation-triangle"></i> 
                                        Uploading new images will replace all existing images.
                                    </small>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Image Preview Section -->
                    <div class="row" id="imagePreviewSection" style="display: none;">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label class="form-label">
                                    <i class="bi bi-images"></i> New Image Preview
                                </label>
                                <div id="imagePreview" class="row">
                                    <!-- Preview images will be added here -->
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-check-circle"></i> Save Changes
                        </button>
                        <a asp-action="Index" class="btn btn-outline-secondary">
                            <i class="bi bi-arrow-left"></i> Back to List
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        let selectedFiles = [];
        let deletedImageIndexes = [];
        let currentImagePaths = @Html.Raw(Json.Serialize(Model.AllImagePaths));

        // Validate end date is after start date
        document.getElementById('EndDateTime').addEventListener('change', function() {
            const startDate = new Date(document.getElementById('StartDateTime').value);
            const endDate = new Date(this.value);
            
            if (endDate <= startDate) {
                this.setCustomValidity('End date must be after start date');
            } else {
                this.setCustomValidity('');
            }
        });

        // File input change handler
        document.getElementById('fileInput').addEventListener('change', function(e) {
            const files = Array.from(e.target.files);
            selectedFiles = files;
            updateImagePreview();
        });

        function updateImagePreview() {
            const previewSection = document.getElementById('imagePreviewSection');
            const previewContainer = document.getElementById('imagePreview');
            
            // Clear existing previews
            previewContainer.innerHTML = '';

            // Show preview section if there are new images
            if (selectedFiles.length > 0) {
                previewSection.style.display = 'block';
            } else {
                previewSection.style.display = 'none';
                return;
            }

            // Add file previews
            selectedFiles.forEach((file, index) => {
                if (file.type.startsWith('image/')) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        const previewDiv = document.createElement('div');
                        previewDiv.className = 'col-md-3 mb-3';
                        previewDiv.innerHTML = `
                            <div class="card">
                                <img src="${e.target.result}" class="card-img-top" style="height: 150px; object-fit: cover;" alt="Preview">
                                <div class="card-body p-2">
                                    <small class="text-muted">${file.name}</small>
                                    <button type="button" class="btn btn-sm btn-outline-danger float-end" onclick="removeFile(${index})">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </div>
                            </div>
                        `;
                        previewContainer.appendChild(previewDiv);
                    };
                    reader.readAsDataURL(file);
                }
            });
        }

        function removeFile(index) {
            selectedFiles.splice(index, 1);
            updateFileInput();
            updateImagePreview();
        }

        function updateFileInput() {
            const fileInput = document.getElementById('fileInput');
            const dt = new DataTransfer();
            selectedFiles.forEach(file => dt.items.add(file));
            fileInput.files = dt.files;
        }

        function deleteCurrentImage(index, imagePath) {
            if (confirm('Are you sure you want to delete this image?')) {
                // Add to deleted indexes
                if (!deletedImageIndexes.includes(index)) {
                    deletedImageIndexes.push(index);
                }
                
                // Update hidden input
                document.getElementById('deletedImageIndexes').value = deletedImageIndexes.join(',');
                
                // Remove from DOM
                const imageElement = document.querySelector(`[data-image-index="${index}"]`);
                if (imageElement) {
                    imageElement.remove();
                }
                
                // Show message if no images left
                const remainingImages = document.querySelectorAll('#currentImagesContainer .col-md-3');
                if (remainingImages.length === 0) {
                    const container = document.getElementById('currentImagesContainer');
                    container.innerHTML = '<div class="col-12"><p class="text-muted">No images remaining. Add new images below.</p></div>';
                }
            }
        }

        // Update form submission to include deleted image indexes
        document.querySelector('form').addEventListener('submit', function() {
            document.getElementById('deletedImageIndexes').value = deletedImageIndexes.join(',');
        });
    </script>
}