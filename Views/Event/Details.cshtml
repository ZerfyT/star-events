@model star_events.Models.Event

@{
    ViewData["Title"] = "Event Details";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="page-header">
    <h1><i class="bi bi-eye"></i> Event Details</h1>
    <p>View event information and details</p>
</div>

<div class="row">
    <div class="col-lg-8">
        <div class="details-card">
            <div class="card-header">
                <h5><i class="bi bi-calendar-event"></i> Event Information</h5>
            </div>
            <div class="card-body">
                @if (!string.IsNullOrEmpty(Model.ImageURL))
                {
                    <div class="text-center mb-4">
                        <img src="@Model.ImageURL" alt="@Model.Title" class="img-fluid rounded" style="max-height: 300px;">
                    </div>
                }
                
                <div class="detail-item">
                    <div class="detail-label">
                        <i class="bi bi-type"></i> @Html.DisplayNameFor(model => model.Title)
                    </div>
                    <div class="detail-value">
                        <strong class="fs-5">@Html.DisplayFor(model => model.Title)</strong>
                    </div>
                </div>
                
                <div class="detail-item">
                    <div class="detail-label">
                        <i class="bi bi-text-paragraph"></i> @Html.DisplayNameFor(model => model.Description)
                    </div>
                    <div class="detail-value">
                        <p class="mb-0">@Html.DisplayFor(model => model.Description)</p>
                    </div>
                </div>
                
                <div class="detail-item">
                    <div class="detail-label">
                        <i class="bi bi-geo-alt"></i> Venue
                    </div>
                    <div class="detail-value">
                        @if (Model.Location != null)
                        {
                            <span class="badge bg-info fs-6">@Model.Location.Address</span>
                        }
                        else
                        {
                            <span class="text-muted">No Venue Assigned</span>
                        }
                    </div>
                </div>
                
                <div class="detail-item">
                    <div class="detail-label">
                        <i class="bi bi-tags"></i> Category
                    </div>
                    <div class="detail-value">
                        @if (Model.Category != null)
                        {
                            <span class="badge bg-secondary fs-6">@Model.Category.Name</span>
                        }
                        else
                        {
                            <span class="text-muted">No Category Assigned</span>
                        }
                    </div>
                </div>
                
                <div class="detail-item">
                    <div class="detail-label">
                        <i class="bi bi-calendar-plus"></i> @Html.DisplayNameFor(model => model.StartDateTime)
                    </div>
                    <div class="detail-value">
                        <span class="text-info fs-6">@Model.StartDateTime.ToString("MMM dd, yyyy 'at' h:mm tt")</span>
                    </div>
                </div>
                
                <div class="detail-item">
                    <div class="detail-label">
                        <i class="bi bi-calendar-x"></i> @Html.DisplayNameFor(model => model.EndDateTime)
                    </div>
                    <div class="detail-value">
                        <span class="text-info fs-6">@Model.EndDateTime.ToString("MMM dd, yyyy 'at' h:mm tt")</span>
                    </div>
                </div>
                
                <div class="detail-item">
                    <div class="detail-label">
                        <i class="bi bi-toggle-on"></i> Status
                    </div>
                    <div class="detail-value">
                        @{
                            var now = DateTime.Now;
                            var isPast = Model.EndDateTime < now;
                            var isUpcoming = Model.StartDateTime > now;
                            var isOngoing = Model.StartDateTime <= now && Model.EndDateTime >= now;
                            
                            string statusClass;
                            string statusText;
                            
                            if (Model.Status == "Cancelled")
                            {
                                statusClass = "bg-danger";
                                statusText = "Cancelled";
                            }
                            else if (Model.Status == "Draft")
                            {
                                statusClass = "bg-secondary";
                                statusText = "Draft";
                            }
                            else if (isPast)
                            {
                                statusClass = "bg-dark";
                                statusText = "Past";
                            }
                            else if (isOngoing)
                            {
                                statusClass = "bg-success";
                                statusText = "Ongoing";
                            }
                            else if (isUpcoming)
                            {
                                statusClass = "bg-primary";
                                statusText = "Upcoming";
                            }
                            else
                            {
                                statusClass = "bg-warning";
                                statusText = Model.Status;
                            }
                        }
                        <span class="badge @statusClass fs-6">@statusText</span>
                    </div>
                </div>
                
                <div class="detail-item">
                    <div class="detail-label">
                        <i class="bi bi-person"></i> Organizer
                    </div>
                    <div class="detail-value">
                        @if (Model.Organizer != null)
                        {
                            <div class="d-flex align-items-center">
                                <div class="bg-primary rounded-circle me-3 d-flex align-items-center justify-content-center" style="width: 40px; height: 40px;">
                                    <i class="bi bi-person text-white"></i>
                                </div>
                                <div>
                                    <strong>@Model.Organizer.UserName</strong>
                                    <br>
                                    <small class="text-muted">@Model.Organizer.Email</small>
                                </div>
                            </div>
                        }
                        else
                        {
                            <span class="text-muted">No Organizer Assigned</span>
                        }
                    </div>
                </div>
            </div>
        </div>
        
        <div class="mt-3">
            <a asp-action="Edit" asp-route-id="@Model?.EventID" class="btn btn-primary">
                <i class="bi bi-pencil"></i> Edit Event
            </a>
            <a asp-action="Index" class="btn btn-outline-secondary">
                <i class="bi bi-arrow-left"></i> Back to List
            </a>
        </div>
    </div>
    
    <div class="col-lg-4">
        <div class="stats-card">
            <div class="d-flex align-items-center mb-3">
                <div class="stats-icon bg-primary">
                    <i class="bi bi-clock"></i>
                </div>
                <div class="ms-3">
                    <h6 class="mb-0">Event Timeline</h6>
                </div>
            </div>
            @{
                var totalDuration = Model.EndDateTime - Model.StartDateTime;
                var timeUntilStart = Model.StartDateTime - now;
                var timeUntilEnd = Model.EndDateTime - now;
                
                var progressPercentage = 0.0;
                if (totalDuration.TotalHours > 0)
                {
                    if (now < Model.StartDateTime)
                    {
                        progressPercentage = 0;
                    }
                    else if (now > Model.EndDateTime)
                    {
                        progressPercentage = 100;
                    }
                    else
                    {
                        var elapsed = now - Model.StartDateTime;
                        progressPercentage = Math.Min(100, Math.Max(0, (elapsed.TotalHours / totalDuration.TotalHours) * 100));
                    }
                }
            }
            
            <div class="mb-3">
                <div class="d-flex justify-content-between mb-1">
                    <span>Duration:</span>
                    <strong>@totalDuration.Days days, @totalDuration.Hours hours</strong>
                </div>
                <div class="progress" style="height: 8px;">
                    <div class="progress-bar bg-primary" role="progressbar" style="width: @progressPercentage.ToString("F0")%"></div>
                </div>
            </div>
            
            <div class="mb-3">
                <div class="d-flex justify-content-between">
                    <span>Time Status:</span>
                    <strong class="@(timeUntilStart.TotalHours > 0 ? "text-primary" : timeUntilEnd.TotalHours < 0 ? "text-dark" : "text-success")">
                        @if (timeUntilStart.TotalHours > 0)
                        {
                            <text>Starts in @timeUntilStart.Days days</text>
                        }
                        else if (timeUntilEnd.TotalHours < 0)
                        {
                            <text>Ended @Math.Abs(timeUntilEnd.Days) days ago</text>
                        }
                        else
                        {
                            <text>In Progress</text>
                        }
                    </strong>
                </div>
            </div>
            
            @if (!string.IsNullOrEmpty(Model.ImageURL))
            {
                <div class="text-center">
                    <div class="h6 text-primary">Event Image</div>
                    <img src="@Model.ImageURL" alt="@Model.Title" class="img-fluid rounded" style="max-height: 150px;">
                </div>
            }
        </div>
    </div>
</div>