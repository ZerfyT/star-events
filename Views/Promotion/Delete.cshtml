@model Promotion

@{
    ViewData["Title"] = "Delete Promotion";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

    var now = DateTime.Now;
    var isExpired = Model.EndDate < now;
    var isNotStarted = Model.StartDate > now;
}

<div class="page-header">
    <h1><i class="bi bi-trash"></i> Delete Promotion</h1>
    <p>Remove promotional code from the system</p>
</div>

<div class="row">
    <div class="col-lg-8">
        <div class="delete-card">
            <div class="card-header">
                <h5><i class="bi bi-exclamation-triangle"></i> Confirm Deletion</h5>
            </div>
            <div class="card-body text-center">
                <div class="warning-icon">
                    <i class="bi bi-exclamation-triangle"></i>
                </div>
                <h4>Are you sure you want to delete this promotion?</h4>
                <p class="text-muted">This action cannot be undone. Existing bookings that used this promotion may be
                    affected.</p>

                <div class="details-card mt-4">
                    <div class="card-header">
                        <h6><i class="bi bi-percent"></i> Promotion to be deleted</h6>
                    </div>
                    <div class="card-body">
                        <div class="detail-item">
                            <div class="detail-label">
                                <i class="bi bi-tag"></i> @Html.DisplayNameFor(model => model.PromoCode)
                            </div>
                            <div class="detail-value">
                                <strong class="text-primary">@Html.DisplayFor(model => model.PromoCode)</strong>
                            </div>
                        </div>

                        <div class="detail-item">
                            <div class="detail-label">
                                <i class="bi bi-calendar-event"></i> Event
                            </div>
                            <div class="detail-value">
                                @if (Model.Event != null)
                                {
                                    <span class="badge bg-info fs-6">@Model.Event.Title</span>
                                }
                                else
                                {
                                    <span class="text-muted">No Event Assigned</span>
                                }
                            </div>
                        </div>

                        <div class="detail-item">
                            <div class="detail-label">
                                <i class="bi bi-percent"></i> @Html.DisplayNameFor(model => model.DiscountType)
                            </div>
                            <div class="detail-value">
                                @{
                                    var discountTypeClass = Model.DiscountType == "Percentage" ? "bg-success" : "bg-warning";
                                }
                                <span
                                    class="badge @discountTypeClass fs-6">@Html.DisplayFor(model => model.DiscountType)</span>
                            </div>
                        </div>

                        <div class="detail-item">
                            <div class="detail-label">
                                <i class="bi bi-currency-dollar"></i> @Html.DisplayNameFor(model => model.DiscountValue)
                            </div>
                            <div class="detail-value">
                                @if (Model.DiscountType == "Percentage")
                                {
                                    <span
                                        class="text-success fw-bold fs-5">@Html.DisplayFor(model => model.DiscountValue)%</span>
                                }
                                else
                                {
                                    <span
                                        class="text-success fw-bold fs-5">$@Html.DisplayFor(model => model.DiscountValue)</span>
                                }
                            </div>
                        </div>

                        <div class="detail-item">
                            <div class="detail-label">
                                <i class="bi bi-calendar-plus"></i> @Html.DisplayNameFor(model => model.StartDate)
                            </div>
                            <div class="detail-value">
                                <span class="text-info">@Model.StartDate.ToString("MMM dd, yyyy 'at' h:mm tt")</span>
                            </div>
                        </div>

                        <div class="detail-item">
                            <div class="detail-label">
                                <i class="bi bi-calendar-x"></i> @Html.DisplayNameFor(model => model.EndDate)
                            </div>
                            <div class="detail-value">
                                <span class="text-info">@Model.EndDate.ToString("MMM dd, yyyy 'at' h:mm tt")</span>
                            </div>
                        </div>

                        <div class="detail-item">
                            <div class="detail-label">
                                <i class="bi bi-toggle-on"></i> Status
                            </div>
                            <div class="detail-value">
                                @{
                                    var isActive = Model.IsActive && !isExpired && !isNotStarted;

                                    string statusClass;
                                    string statusText;

                                    if (!Model.IsActive)
                                    {
                                        statusClass = "bg-secondary";
                                        statusText = "Inactive";
                                    }
                                    else if (isExpired)
                                    {
                                        statusClass = "bg-danger";
                                        statusText = "Expired";
                                    }
                                    else if (isNotStarted)
                                    {
                                        statusClass = "bg-warning";
                                        statusText = "Not Started";
                                    }
                                    else
                                    {
                                        statusClass = "bg-success";
                                        statusText = "Active";
                                    }
                                }
                                <span class="badge @statusClass fs-6">@statusText</span>
                            </div>
                        </div>
                    </div>
                </div>

                <form asp-action="Delete" class="mt-4">
                    <input type="hidden" asp-for="PromotionID"/>
                    <button type="submit" class="btn btn-danger"
                            onclick="return confirm('Are you absolutely sure you want to delete this promotion? This action cannot be undone!')">
                        <i class="bi bi-trash"></i> Yes, Delete Promotion
                    </button>
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        <i class="bi bi-arrow-left"></i> Cancel
                    </a>
                </form>
            </div>
        </div>
    </div>

    <div class="col-lg-4">
        <div class="stats-card">
            <div class="d-flex align-items-center mb-3">
                <div class="stats-icon bg-warning">
                    <i class="bi bi-exclamation-triangle"></i>
                </div>
                <div class="ms-3">
                    <h6 class="mb-0">Impact Analysis</h6>
                </div>
            </div>
            @{
                var isCurrentlyActive = Model.IsActive && !isExpired && !isNotStarted;
            }

            <div class="mb-3">
                <div class="d-flex justify-content-between">
                    <span>Promotion Status:</span>
                    <strong class="@(isCurrentlyActive ? "text-success" : "text-muted")">
                        @(isCurrentlyActive ? "Currently Active" : "Not Active")
                    </strong>
                </div>
                @if (isCurrentlyActive)
                {
                    <small class="text-warning">⚠️ This promotion is currently active and may be in use</small>
                }
            </div>

            <div class="mb-3">
                <div class="d-flex justify-content-between">
                    <span>Time Remaining:</span>
                    <strong
                        class="@(Model.EndDate < now ? "text-danger" : Model.EndDate - now < TimeSpan.FromDays(7) ? "text-warning" : "text-success")">
                        @(Model.EndDate < now ? "Expired" : (Model.EndDate - now).Days + " days")
                    </strong>
                </div>
            </div>

            <div class="text-center">
                <div class="h6 text-primary">Discount Value</div>
                <div class="h5 text-danger">
                    @if (Model.DiscountType == "Percentage")
                    {
                        <text>@Model.DiscountValue%</text>
                    }
                    else
                    {
                        <text>$@Model.DiscountValue</text>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
