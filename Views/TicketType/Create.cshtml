@model TicketType

@{
    ViewData["Title"] = "Create Ticket Type";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="page-header">
    <div class="d-flex justify-content-between align-items-center">
        <div>
            <h1><i class="bi bi-plus-circle me-3"></i>Create New Ticket Type</h1>
            <p>Add a new ticket type for your events</p>
        </div>
        <div>
            <a asp-action="Index" class="btn btn-light">
                <i class="bi bi-arrow-left"></i> Back to List
            </a>
        </div>
    </div>
</div>

<div class="row justify-content-center">
    <div class="col-lg-8">
        <div class="form-card">
            <div class="card-header">
                <h5><i class="bi bi-ticket-perforated me-2"></i>Ticket Type Information</h5>
            </div>
            <div class="card-body">
                <form asp-action="Create" class="needs-validation" novalidate>
                    <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label asp-for="EventID" class="form-label">
                                    <i class="bi bi-calendar-event me-1"></i>Event <span class="text-danger">*</span>
                                </label>
                                <select asp-for="EventID" class="form-select" asp-items="ViewBag.Events" required>
                                    <option value="">-- Select an Event --</option>
                                </select>
                                <span asp-validation-for="EventID" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label asp-for="Name" class="form-label">
                                    <i class="bi bi-tag me-1"></i>Ticket Type Name <span class="text-danger">*</span>
                                </label>
                                <input asp-for="Name" class="form-control"
                                       placeholder="e.g., General Admission, VIP, Early Bird" required/>
                                <span asp-validation-for="Name" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label asp-for="Price" class="form-label">
                                    <i class="bi bi-currency-dollar me-1"></i>Price <span class="text-danger">*</span>
                                </label>
                                <div class="input-group">
                                    <span class="input-group-text">$</span>
                                    <input asp-for="Price" class="form-control" type="number" step="0.01" min="0"
                                           placeholder="0.00" required/>
                                </div>
                                <span asp-validation-for="Price" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label asp-for="TotalQuantity" class="form-label">
                                    <i class="bi bi-boxes me-1"></i>Total Quantity <span class="text-danger">*</span>
                                </label>
                                <input asp-for="TotalQuantity" class="form-control" type="number" min="1"
                                       placeholder="100" required/>
                                <span asp-validation-for="TotalQuantity" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label asp-for="AvailableQuantity" class="form-label">
                                    <i class="bi bi-check-circle me-1"></i>Available Quantity <span class="text-danger">*</span>
                                </label>
                                <input asp-for="AvailableQuantity" class="form-control" type="number" min="0"
                                       placeholder="100" required/>
                                <small class="form-text text-muted">This should be less than or equal to Total
                                    Quantity</small>
                                <span asp-validation-for="AvailableQuantity" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="form-group mt-4">
                        <div class="d-flex gap-3">
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-check-circle me-2"></i>Create Ticket Type
                            </button>
                            <a asp-action="Index" class="btn btn-outline-secondary">
                                <i class="bi bi-x-circle me-2"></i>Cancel
                            </a>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    <script>
        // Auto-set Available Quantity to Total Quantity when Total Quantity changes
        document.getElementById('TotalQuantity').addEventListener('input', function () {
            const totalQuantity = parseInt(this.value) || 0;
            const availableQuantityField = document.getElementById('AvailableQuantity');
            if (availableQuantityField.value === '' || parseInt(availableQuantityField.value) > totalQuantity) {
                availableQuantityField.value = totalQuantity;
            }
            availableQuantityField.max = totalQuantity;
        });

        // Validate Available Quantity doesn't exceed Total Quantity
        document.getElementById('AvailableQuantity').addEventListener('input', function () {
            const totalQuantity = parseInt(document.getElementById('TotalQuantity').value) || 0;
            const availableQuantity = parseInt(this.value) || 0;

            if (availableQuantity > totalQuantity) {
                this.setCustomValidity('Available quantity cannot exceed total quantity');
            } else {
                this.setCustomValidity('');
            }
        });
    </script>
}
