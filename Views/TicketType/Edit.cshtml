@model star_events.Models.TicketType

@{
    ViewData["Title"] = "Edit Ticket Type";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1 class="h3 mb-0 text-gray-800">
                    <i class="fas fa-edit me-2"></i>Edit Ticket Type
                </h1>
                <a asp-action="Index" class="btn btn-secondary">
                    <i class="fas fa-arrow-left me-1"></i>Back to List
                </a>
            </div>

            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Edit Ticket Type Information</h6>
                </div>
                <div class="card-body">
                    <form asp-action="Edit" class="needs-validation" novalidate>
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
                        <input type="hidden" asp-for="TicketTypeID" />
                        
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label asp-for="EventID" class="form-label">
                                        <i class="fas fa-calendar me-1"></i>Event <span class="text-danger">*</span>
                                    </label>
                                    <select asp-for="EventID" class="form-select" asp-items="ViewBag.Events" required>
                                        <option value="">-- Select an Event --</option>
                                    </select>
                                    <span asp-validation-for="EventID" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label asp-for="Name" class="form-label">
                                        <i class="fas fa-tag me-1"></i>Ticket Type Name <span class="text-danger">*</span>
                                    </label>
                                    <input asp-for="Name" class="form-control" placeholder="e.g., General Admission, VIP, Early Bird" required />
                                    <span asp-validation-for="Name" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label asp-for="Price" class="form-label">
                                        <i class="fas fa-dollar-sign me-1"></i>Price <span class="text-danger">*</span>
                                    </label>
                                    <div class="input-group">
                                        <span class="input-group-text">$</span>
                                        <input asp-for="Price" class="form-control" type="number" step="0.01" min="0" placeholder="0.00" required />
                                    </div>
                                    <span asp-validation-for="Price" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label asp-for="TotalQuantity" class="form-label">
                                        <i class="fas fa-boxes me-1"></i>Total Quantity <span class="text-danger">*</span>
                                    </label>
                                    <input asp-for="TotalQuantity" class="form-control" type="number" min="1" placeholder="100" required />
                                    <span asp-validation-for="TotalQuantity" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label asp-for="AvailableQuantity" class="form-label">
                                        <i class="fas fa-check-circle me-1"></i>Available Quantity <span class="text-danger">*</span>
                                    </label>
                                    <input asp-for="AvailableQuantity" class="form-control" type="number" min="0" placeholder="100" required />
                                    <div class="form-text">This should be less than or equal to Total Quantity</div>
                                    <span asp-validation-for="AvailableQuantity" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="form-group mt-4">
                            <div class="d-flex gap-2">
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-save me-1"></i>Save Changes
                                </button>
                                <a asp-action="Index" class="btn btn-secondary">
                                    <i class="fas fa-times me-1"></i>Cancel
                                </a>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        // Auto-set Available Quantity to Total Quantity when Total Quantity changes
        document.getElementById('TotalQuantity').addEventListener('input', function() {
            const totalQuantity = parseInt(this.value) || 0;
            const availableQuantityField = document.getElementById('AvailableQuantity');
            if (availableQuantityField.value === '' || parseInt(availableQuantityField.value) > totalQuantity) {
                availableQuantityField.value = totalQuantity;
            }
            availableQuantityField.max = totalQuantity;
        });

        // Validate Available Quantity doesn't exceed Total Quantity
        document.getElementById('AvailableQuantity').addEventListener('input', function() {
            const totalQuantity = parseInt(document.getElementById('TotalQuantity').value) || 0;
            const availableQuantity = parseInt(this.value) || 0;
            
            if (availableQuantity > totalQuantity) {
                this.setCustomValidity('Available quantity cannot exceed total quantity');
            } else {
                this.setCustomValidity('');
            }
        });
    </script>
}
