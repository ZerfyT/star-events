@model IEnumerable<star_events.Models.ViewModels.UserViewModel>

@{
    ViewData["Title"] = "User Management";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="page-header">
    <div class="d-flex justify-content-between align-items-center">
        <div>
            <h1><i class="bi bi-people me-3"></i>User Management</h1>
            <p>Manage user accounts, roles, and permissions</p>
        </div>
        <div>
            <a asp-action="Create" class="btn btn-light btn-lg">
                <i class="bi bi-person-plus"></i> Add New User
            </a>
        </div>
    </div>
</div>

<!-- Statistics Cards -->
<div class="row mb-4">
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="stats-card">
            <div class="d-flex align-items-center">
                <div class="stats-icon bg-primary">
                    <i class="bi bi-people"></i>
                </div>
                <div class="ms-3">
                    <p class="stats-number text-primary">@Model.Count()</p>
                    <p class="stats-label">Total Users</p>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="stats-card">
            <div class="d-flex align-items-center">
                <div class="stats-icon bg-success">
                    <i class="bi bi-person-check"></i>
                </div>
                <div class="ms-3">
                    <p class="stats-number text-success">@Model.Count(u => u.Roles.Contains("Admin"))</p>
                    <p class="stats-label">Administrators</p>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="stats-card">
            <div class="d-flex align-items-center">
                <div class="stats-icon bg-info">
                    <i class="bi bi-person"></i>
                </div>
                <div class="ms-3">
                    <p class="stats-number text-info">@Model.Count(u => u.Roles.Contains("User"))</p>
                    <p class="stats-label">Regular Users</p>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="stats-card">
            <div class="d-flex align-items-center">
                <div class="stats-icon bg-warning">
                    <i class="bi bi-star"></i>
                </div>
                <div class="ms-3">
                    <p class="stats-number text-warning">@Model.Sum(u => u.LoyaltyPoints)</p>
                    <p class="stats-label">Total Loyalty Points</p>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Search and Filter Bar -->
<div class="row mb-4">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <div class="row align-items-center">
                    <div class="col-md-4">
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-search"></i></span>
                            <input type="text" class="form-control" id="searchInput" placeholder="Search users...">
                        </div>
                    </div>
                    <div class="col-md-3">
                        <select class="form-select" id="roleFilter">
                            <option value="">All Roles</option>
                            <option value="Admin">Administrators</option>
                            <option value="User">Regular Users</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <select class="form-select" id="sortBy">
                            <option value="name">Sort by Name</option>
                            <option value="email">Sort by Email</option>
                            <option value="points">Sort by Loyalty Points</option>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <button class="btn btn-outline-secondary w-100" onclick="clearFilters()">
                            <i class="bi bi-arrow-clockwise"></i> Clear
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Users Table -->
<div class="row">
    <div class="col-12">
        <div class="table-card">
            <div class="card-header">
                <h5><i class="bi bi-table me-2"></i>User Directory</h5>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover mb-0" id="usersTable">
                        <thead>
                        <tr>
                            <th class="border-0">
                                <i class="bi bi-person me-1"></i>
                                @Html.DisplayNameFor(model => model.FirstName)
                            </th>
                            <th class="border-0">
                                <i class="bi bi-envelope me-1"></i>
                                @Html.DisplayNameFor(model => model.Email)
                            </th>
                            <th class="border-0">
                                <i class="bi bi-telephone me-1"></i>
                                @Html.DisplayNameFor(model => model.ContactNo)
                            </th>
                            <th class="border-0">
                                <i class="bi bi-star me-1"></i>
                                @Html.DisplayNameFor(model => model.LoyaltyPoints)
                            </th>
                            <th class="border-0">
                                <i class="bi bi-shield me-1"></i>
                                Roles
                            </th>
                            <th class="border-0 text-center">
                                <i class="bi bi-gear me-1"></i>
                                Actions
                            </th>
                        </tr>
                        </thead>
                        <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <div
                                            class="avatar-sm bg-primary text-white rounded-circle d-flex align-items-center justify-content-center me-3">
                                            @item.FirstName.Substring(0, 1).ToUpper()
                                        </div>
                                        <div>
                                            <div class="fw-semibold">@item.FirstName @item.LastName</div>
                                            <small class="text-muted">ID: @item.Id.Substring(0, 8)...</small>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <i class="bi bi-envelope text-muted me-2"></i>
                                        @item.Email
                                    </div>
                                </td>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <i class="bi bi-telephone text-muted me-2"></i>
                                        @(string.IsNullOrEmpty(item.ContactNo) ? "N/A" : item.ContactNo)
                                    </div>
                                </td>
                                <td>
                                        <span class="badge bg-warning text-dark fs-6">
                                            <i class="bi bi-star-fill me-1"></i>
                                            @item.LoyaltyPoints
                                        </span>
                                </td>
                                <td>
                                    @foreach (var role in item.Roles)
                                    {
                                        <span class="badge @(role == "Admin" ? "bg-danger" : "bg-primary") me-1">
                                                @role
                                            </span>
                                    }
                                </td>
                                <td class="text-center">
                                    <div class="btn-group" role="group">
                                        <a asp-action="Details" asp-route-id="@item.Id"
                                           class="btn btn-outline-info btn-action" title="View Details">
                                            <i class="bi bi-eye"></i>
                                        </a>
                                        <a asp-action="Edit" asp-route-id="@item.Id"
                                           class="btn btn-outline-warning btn-action" title="Edit User">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@item.Id"
                                           class="btn btn-outline-danger btn-action" title="Delete User">
                                            <i class="bi bi-trash"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Search functionality
        document.getElementById('searchInput').addEventListener('keyup', function () {
            filterTable();
        });

        // Role filter
        document.getElementById('roleFilter').addEventListener('change', function () {
            filterTable();
        });

        // Sort functionality
        document.getElementById('sortBy').addEventListener('change', function () {
            sortTable();
        });

        function filterTable() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            const roleFilter = document.getElementById('roleFilter').value;
            const rows = document.querySelectorAll('#usersTable tbody tr');

            rows.forEach(row => {
                const name = row.cells[0].textContent.toLowerCase();
                const email = row.cells[1].textContent.toLowerCase();
                const roles = row.cells[4].textContent;

                const matchesSearch = name.includes(searchTerm) || email.includes(searchTerm);
                const matchesRole = !roleFilter || roles.includes(roleFilter);

                row.style.display = matchesSearch && matchesRole ? '' : 'none';
            });
        }

        function sortTable() {
            const sortBy = document.getElementById('sortBy').value;
            const tbody = document.querySelector('#usersTable tbody');
            const rows = Array.from(tbody.querySelectorAll('tr'));

            rows.sort((a, b) => {
                let aVal, bVal;

                switch (sortBy) {
                    case 'name':
                        aVal = a.cells[0].textContent.trim();
                        bVal = b.cells[0].textContent.trim();
                        break;
                    case 'email':
                        aVal = a.cells[1].textContent.trim();
                        bVal = b.cells[1].textContent.trim();
                        break;
                    case 'points':
                        aVal = parseInt(a.cells[3].textContent.trim()) || 0;
                        bVal = parseInt(b.cells[3].textContent.trim()) || 0;
                        break;
                }

                return aVal > bVal ? 1 : -1;
            });

            rows.forEach(row => tbody.appendChild(row));
        }

        function clearFilters() {
            document.getElementById('searchInput').value = '';
            document.getElementById('roleFilter').value = '';
            document.getElementById('sortBy').value = 'name';
            filterTable();
        }

        // Add avatar styling
        const style = document.createElement('style');
        style.textContent = `
            .avatar-sm {
                width: 40px;
                height: 40px;
                font-size: 14px;
                font-weight: 600;
            }
        `;
        document.head.appendChild(style);
    </script>
}